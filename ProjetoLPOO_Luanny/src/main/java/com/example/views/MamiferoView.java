/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.views;

import com.example.entities.Mamifero;
import com.example.dao.PersistenciaJPA;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luanny
 */
public class MamiferoView extends javax.swing.JFrame {

    /**
     * Creates new form MamiferoView
     */
    public MamiferoView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEdit = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMamiferos = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();
        btnCad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEdit.setText("Editar Mamífero");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir Mamífero");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SWRomnc", 2, 16)); // NOI18N
        jLabel1.setText(" CONTROLE DE MAMÍFEROS");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        tblMamiferos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Nome Científico", "Status", "Possui Pelo", "Período de Gestação", "Dieta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMamiferos);

        btnListar.setText("Listar Mamíferos");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnCad.setText("Novo Mamífero");
        btnCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnListar)
                        .addGap(76, 76, 76)
                        .addComponent(btnCad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(btnEdit)
                        .addGap(63, 63, 63)
                        .addComponent(btnExcluir)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(btnCad)
                    .addComponent(btnEdit)
                    .addComponent(btnExcluir))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try {
            int linhaSelecionada = tblMamiferos.getSelectedRow();

            if (linhaSelecionada == -1) {
                JOptionPane.showMessageDialog(this, "Selecione um mamífero para editar!");
                return;
            }

            Long idMamifero = (Long) tblMamiferos.getValueAt(linhaSelecionada, 0);

            EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjetoLPOOE1_PU");
            EntityManager em = emf.createEntityManager();
            Mamifero mamiferoSelecionado = em.find(Mamifero.class, idMamifero);

            if (mamiferoSelecionado == null) {
                JOptionPane.showMessageDialog(this, "Erro: Mamífero não encontrado no banco de dados!");
                return;
            }

            MamiferoCadastro telaEdicao = new MamiferoCadastro(mamiferoSelecionado);
            telaEdicao.setVisible(true);
            telaEdicao.setLocationRelativeTo(this);

            telaEdicao.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent e) {
                    btnListarActionPerformed(evt);
                }
            });

            em.close();
            emf.close();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao editar mamífero: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linhaSelecionada = tblMamiferos.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um mamífero para excluir.");
            return;
        }

        Long idMamifero = (Long) tblMamiferos.getValueAt(linhaSelecionada, 0);

        int confirmacao = JOptionPane.showConfirmDialog(
            this,
            "Tem certeza que deseja excluir este mamífero?",
            "Confirmação de Exclusão",
            JOptionPane.YES_NO_OPTION
        );

        if (confirmacao == JOptionPane.YES_OPTION) {
            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjetoLPOOE1_PU");
                EntityManager em = emf.createEntityManager();

                em.getTransaction().begin();
                Mamifero mamifero = em.find(Mamifero.class, idMamifero);
                if (mamifero != null) {
                    em.remove(mamifero);
                    JOptionPane.showMessageDialog(this, "Mamífero excluído com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Erro: Mamífero não encontrado.");
                }
                em.getTransaction().commit();

                btnListarActionPerformed(evt);

                em.close();
                emf.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao excluir o mamífero: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblMamiferos.getModel();
        modelo.setRowCount(0);

        try {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("ProjetoLPOOE1_PU");
            EntityManager em = emf.createEntityManager();

            List<Mamifero> mamiferos = em.createQuery(
                "SELECT m FROM Mamifero m", Mamifero.class
            ).getResultList();

            for (Mamifero m : mamiferos) {

                modelo.addRow(new Object[] {
                    m.getId(),
                    m.getNome(),
                    m.getNomeCientifico(),
                    m.getStatus(),
                    m.isPossuiPelo(),
                    m.getPeriodoGestacao(),
                    m.getDieta()
                });
            }

            em.close();
            emf.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao listar mamíferos: " + e.getMessage());
            e.printStackTrace();
        }
       
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadActionPerformed
        MamiferoCadastro telaMamiferoCadastro = new MamiferoCadastro();
        telaMamiferoCadastro.setVisible(true);
        telaMamiferoCadastro.setLocationRelativeTo(this);
    }//GEN-LAST:event_btnCadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MamiferoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MamiferoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MamiferoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MamiferoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MamiferoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCad;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMamiferos;
    // End of variables declaration//GEN-END:variables
}
